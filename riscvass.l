%{
	//c.l (for flex)
	#include <iostream>
	#include <stdio.h>

	//generated by bison
	#include "riscvass.tab.h"

	using namespace std;
	extern int yylex();
	extern int yyparse();

	int linenum = 0;
	int charnum = 0;
	//[xX]([0-9]|1[0-9]|2[0-9]|3[0-1]) { yylval.ival = (int)(size_t)yytext; return REG; }
%}

%option noyywrap

/* named regexes */

%%
[\t ]			 {; }
[\n]             { ++linenum; charnum=0; }
[\\n]            { ++linenum; charnum=0; }

"add"            { return ADD_OP; }

[rx][0-9]        { yylval.ival = atoi(&yytext[1]); return REG; }
,                { return COMMA; }
.				 { cout << "L"<< linenum << ":" << charnum << "unknown token:" << yytext << endl; }
%%

int main(int argc, char** argv){
	if (argc < 2){
		cout << "No source file passed\n" << endl;
		cout << "Usage: " << argv[0] << " file.c" << endl;
		return 1;
	}
	FILE *src = fopen(argv[1], "r");
	if (!src){
		cout << "Error: Cannot open file " << argv[1] << endl;
		return -1; //really -1?
	}        

	// Set lex to read from the file instead of STDIN
    yyin = src;
	
	yyparse();
	while(yylex());
	
	//close file
	fclose(src);

	return 0;
}
